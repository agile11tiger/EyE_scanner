<?xml version="1.0" encoding="utf-8" ?>
<TabbedPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             xmlns:checks="clr-namespace:Scanner.ViewModels.Scanner.Checks"
             xmlns:controls="clr-namespace:Scanner.Controls"
             xmlns:magic="clr-namespace:MagicGradients;assembly=MagicGradients"
             x:DataType="checks:CheckEditorViewModel"
             x:Class="Scanner.Views.Scanner.Checks.CheckTabbedPage"
             ItemsSource="{Binding Checks}">

    <Shell.TitleView>
        <Grid Style="{StaticResource TitleGrid}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0"
                   Text="Чек"
                   Style="{StaticResource TitleLabel}"/>
            <ImageButton Grid.Column="1"
                         Style="{StaticResource QuestionImageButton}"
                         Command="{Binding InfoCommand}"/>
        </Grid>
    </Shell.TitleView>

    <TabbedPage.ItemTemplate>
        <DataTemplate x:DataType="checks:FriendCheckViewModel">
            <ContentPage Title="{Binding TitlePage}" IconImageSource="{Binding IconPage}" >
                <Grid>
                    <magic:GradientView>
                        <magic:GradientView.GradientSource>
                            <magic:CssGradientSource Stylesheet="{StaticResource PageGradient}"/>
                        </magic:GradientView.GradientSource>
                    </magic:GradientView>

                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <controls:GradientLabel Grid.Row="0"
                                                Grid.ColumnSpan="2"
                                                Text="{Binding Source={RelativeSource AncestorType={x:Type checks:CheckEditorViewModel}}, Path=SelectedFriendVM.Name}"
                                                TextColorFrom="{StaticResource SpringGreen}"
                                                TextColorTo="{StaticResource NavyBlue}"
                                                FontSize="Large"
                                                HorizontalOptions="Center"
                                                IsEnabled="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=IsCommonCheck}"
                                                IsVisible="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=IsCommonCheck}">
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type checks:CheckEditorViewModel}}, Path=SelectFriendCommand }"/>
                            </Label.GestureRecognizers>
                        </controls:GradientLabel>

                        <Label Grid.Row="1"
                               Grid.Column="0"
                               Text="Сумма"
                               FontAttributes="Bold"/>
                        <Label Grid.Row="1"
                               Grid.Column="1"
                               Text="{Binding TotalSumRub, StringFormat='{0:C2}'}"
                               FontAttributes="Bold"
                               HorizontalOptions="End"/>

                        <ListView x:Name="checkItems"
                                  Grid.Row="2"
                                  Grid.ColumnSpan="2"
                                  ItemsSource="{Binding Items}"
                                  HasUnevenRows="True"
                                  BackgroundColor="Transparent"
                                  SelectionMode="Single"
                                  ItemSelected="ListView_ItemSelected">
                            <ListView.ItemTemplate >
                                <DataTemplate x:DataType="checks:CheckItemViewModel">
                                    <ViewCell>
                                        <ViewCell.View>
                                            <Grid RowSpacing="0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="25"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="110"/>
                                                </Grid.ColumnDefinitions>

                                                <ImageButton Grid.Column="0" 
                                                             Source="{Binding MarkBoxImage}"
                                                             WidthRequest="25"
                                                             HeightRequest="25" 
                                                             VerticalOptions="Center"
                                                             Command="{Binding Source={RelativeSource AncestorType={x:Type checks:CheckEditorViewModel}}, Path = MarkProductCommand}"
                                                             CommandParameter="{Binding }"
                                                             IsEnabled="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=IsCommonCheck}"
                                                             IsVisible="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=IsCommonCheck}"/>

                                                <Label Grid.Column="1"
                                                       Text="{Binding Name}"
                                                       LineBreakMode="CharacterWrap"
                                                       VerticalOptions="Center"
                                                       IsEnabled="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=IsCommonCheck}"
                                                       IsVisible="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=IsCommonCheck}"/>
                                                
                                                <Label Grid.ColumnSpan="2"
                                                       Text="{Binding Name}"
                                                       LineBreakMode="CharacterWrap"
                                                       VerticalOptions="Center"
                                                       IsEnabled="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=NoIsCommonCheck}"
                                                       IsVisible="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=NoIsCommonCheck}"/>

                                                <StackLayout Grid.Column="2" HorizontalOptions="End" VerticalOptions="Center" Spacing="0">
                                                    <Label x:Name="sum"
                                                           Margin="0,0,10,0"
                                                           Text="{Binding SumRub, StringFormat='{0:C2}'}"
                                                           FontSize="Small"
                                                           HorizontalOptions="End"
                                                           VerticalOptions="Center"/>
                                                    <StackLayout Orientation="Horizontal" HorizontalOptions="End" VerticalOptions="Center">
                                                        <Label x:Name="price"
                                                               Text="{Binding PriceRub, StringFormat='{0:C2}'}"
                                                               FontSize="Micro"/>
                                                        <Label Text="x"
                                                               FontSize="Micro"/>
                                                        <Label x:Name="quantity"
                                                               Text="{Binding Quantity}"
                                                               FontSize="Micro"/>
                                                        <Label Text="{Binding SelectedQuantity, StringFormat='({0})'}"
                                                               FontSize="Micro"/>
                                                    </StackLayout>
                                                </StackLayout>
                                            </Grid>
                                        </ViewCell.View>
                                    </ViewCell>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                        <StackLayout Grid.Row="3" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalOptions="FillAndExpand">
                            <Button Text="Создать чек"
                                    HorizontalOptions="FillAndExpand"
                                    Command="{Binding Source={RelativeSource AncestorType={x:Type checks:CheckEditorViewModel}}, Path=CreateCheckCommand}"
                                    IsEnabled="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=IsCommonCheck}"
                                    IsVisible="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=IsCommonCheck}"/>
                            <Button Text="В Мои чеки"
                                    HorizontalOptions="FillAndExpand"
                                    Command="{Binding Source={RelativeSource AncestorType={x:Type checks:CheckEditorViewModel}}, Path=AddToMyChecksCommand}"
                                    CommandParameter="{Binding }"
                                    IsEnabled="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=IsCommonCheck}"
                                    IsVisible="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=IsCommonCheck}"/>
                            <Button Text="Отмена"
                                    HorizontalOptions="FillAndExpand"
                                    Command="{Binding Source={RelativeSource AncestorType={x:Type checks:CheckEditorViewModel}}, Path=RemoveCheckCommand}"
                                    CommandParameter="{Binding }"
                                    IsEnabled="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=NoIsCommonCheck}"
                                    IsVisible="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=NoIsCommonCheck}"/>
                            <Button Text="Отправить"
                                    HorizontalOptions="FillAndExpand"
                                    Command="{Binding Source={RelativeSource AncestorType={x:Type checks:CheckEditorViewModel}}, Path=SendCheckCommand}"
                                    CommandParameter="{Binding }"
                                    IsEnabled="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=NoIsCommonCheck}"
                                    IsVisible="{Binding Source={RelativeSource AncestorType={x:Type checks:FriendCheckViewModel}}, Path=NoIsCommonCheck}"/>
                        </StackLayout>
                    </Grid>
                </Grid>
            </ContentPage>
        </DataTemplate>
    </TabbedPage.ItemTemplate>
</TabbedPage>